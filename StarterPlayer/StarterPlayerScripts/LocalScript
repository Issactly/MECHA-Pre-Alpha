--TS:Teleport(96409208046810)




--if the menu needs to be moved, MOVE THE ROOT IN REPLICATED STORAGE, controls are backwards btw

local TS = game:GetService("TeleportService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")


local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService") --keyboard/mouse inputs
local ReplicatedStorage = game:GetService("ReplicatedStorage")


local Camera = workspace.CurrentCamera
local CamPart = ReplicatedStorage:FindFirstChild("camPart"):Clone()
local PodCam = ReplicatedStorage:FindFirstChild("podCam")
local MenuRCam = ReplicatedStorage:FindFirstChild("menuRCam")
local MenuLCam = ReplicatedStorage:FindFirstChild("menuLCam")


local humplayer = game:GetService("Players")
local humlp = humplayer.LocalPlayer
local humchar = humlp.Character
hum = humchar:WaitForChild("Humanoid")


local RunService = game:GetService("RunService")
local char = game:GetService("Players").LocalPlayer
--local hum = char:WaitForChild("Humanoid")
local root = hum.RootPart

function shiftLock(active) --toggle shftlck func
	if active then --whether to en/disable
		hum.CameraOffset = Vector3.new(4,0,0)

		hum.AutoRotate = false --disable auto rot to set by dev ake moi ;]

		RunService:BindToRenderStep("ShiftLock", Enum.RenderPriority.Character.Value, function()
			UIS.MouseBehavior = Enum.MouseBehavior.LockCenter

			local _, y = workspace.CurrentCamera.CFrame.Rotation:ToEulerAnglesYXZ() --get cam angles
			hrp.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(0,y,0) --set root part to cams angs^
		end)
	else
		hum.CameraOffset = Vector3.new(0,0,0)
		RunService:UnbindFromRenderStep("ShiftLock")
		UIS.MouseBehavior = Enum.MouseBehavior.Default
		hum.AutoRotate = true
	end
end

shiftLock(false)







PODUIOPEN = true
local function updateHumanoidState()
	if PODUIOPEN then
	shiftLock(false)
	hum.WalkSpeed = 0
	hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
else
		hum.WalkSpeed = 16
		hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
		shiftLock(true)		
	end
end
updateHumanoidState()












wait(5)

CamPart.Parent = workspace
CamPart.Position = workspace:FindFirstChild("introPart", true).Position
Camera.CameraSubject = CamPart
Camera.CameraType = Enum.CameraType.Scriptable

local cameraConnection
local moveFactor = 0.0005
local previousMouseX, previousMouseY = nil, nil
local MAX_POSITION = 0.5
local originalPosition = CamPart.Position
local UI = ReplicatedStorage:FindFirstChild("MenuUI"):Clone()
local PODUI = workspace:FindFirstChild("PodUI")
local PODMENUS = workspace:FindFirstChild("PODMENUS")
UI.Parent = workspace

local targetPosition = originalPosition
local moving = false


cameraConnection = RunService.RenderStepped:Connect(function()
	local mouse = player:GetMouse()

	local screenX = Camera.ViewportSize.X
	local screenY = Camera.ViewportSize.Y

	local leftoverScreenX = screenX - mouse.X
	local leftoverScreenY = screenY - mouse.Y

	local DistanceFromOriginX = (screenX/2) - leftoverScreenX
	local DistanceFromOriginY = leftoverScreenY - (screenY/2)

	local clampedX = math.clamp(DistanceFromOriginX * moveFactor, -MAX_POSITION, MAX_POSITION)
	local clampedY = math.clamp(DistanceFromOriginY * moveFactor, -MAX_POSITION, MAX_POSITION)

	if previousMouseX and previousMouseY then
		local mouseMoved = (DistanceFromOriginX ~= previousMouseX) or (DistanceFromOriginY ~= previousMouseY)
		if mouseMoved then
			moving = true
			targetPosition = originalPosition + Vector3.new(clampedX,clampedY,0)
		else
			moving = false
		end
	end
	if moving then
		CamPart.CFrame = CamPart.CFrame:Lerp(CFrame.new(targetPosition), .1)
	else
		CamPart.CFrame = CamPart.CFrame:Lerp(CFrame.new(targetPosition), .2)
	end

	local offsetUIX = (screenX/4) * 0.009
	local offsetUIY = (screenY/5) * 0.009

	Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(CamPart.Position), .2)
	local finalTargetPosition = CamPart.Position + Vector3.new(-offsetUIX, -offsetUIY+1, -10)
	if UI.PrimaryPart then
		UI:SetPrimaryPartCFrame(UI.PrimaryPart.CFrame:Lerp(CFrame.new(finalTargetPosition) * CFrame.Angles(0, math.rad(23), 0), .1))
	end

	previousMouseX = DistanceFromOriginX
	previousMouseY = DistanceFromOriginY
end)

local UI2 = ReplicatedStorage:WaitForChild("MenuUI2"):Clone()
UI2.Parent = workspace

local PlayButton = UI:FindFirstChild("PlayPart").SurfaceGui.TextButton
local QuitButton = UI:FindFirstChild("Quit Part").SurfaceGui.TextButton
local CreditButton = UI:FindFirstChild("CreditsPart").SurfaceGui.TextButton



local textBox = UI2.Updates.SurfaceGui.ScrollingFrame.TextLabel
local titleBox = UI2.TitleB.SurfaceGui.TextBox
textBox.RichText = true

PlayButton.MouseButton1Click:Connect(function()
	targetPosition = PodCam.Position
	originalPosition = PodCam.Position
	UI:Destroy()
	
	--gui will update soon to be not all this cause there is an easier way
	
	local playergui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	if playergui:FindFirstChild("ScreenGui") then
		controls = playergui.ScreenGui.Controls
		controls.ImageLabel1.Visible = true
		controls.ImageLabel2.Visible = true
		controls.ImageLabel3.Visible = true
		controls.ImageLabel3Updated.Visible = false


		controls.Text1.Visible = true
		controls.Text2.Visible = true
		controls.Text3.Visible = true
		controls.Text3Updated.Visible = false
	end
	hrp.CFrame = CFrame.lookAt(hrp.Position, Vector3.new(PodCam.Position.X, hrp.Position.Y, PodCam.Position.Z))
end)

CreditButton.MouseButton1Click:Connect(function()
	titleBox.Text = "Credits"
	textBox.Text = [[
	<font size="30"><u><b>Art</b></u></font>
	<i><b>- Animation -</b></i>
	tatyb2016
	
	<i><b>- Character Design -</b></i>
	tatyb2016
	UltimateCollection42
	
	<i><b>- Decals -</b></i>
	LovelySkylar06
	tatyb2016
	
	<i><b>- Modeling -</b></i>
	tatyb2016
	
	<i><b>- World Building -</b></i>
	LovelySkylar06
	tatyb2016
	UltimateCollection42
	
	<font size="30"><u><b>Scripting</b></u></font>
	tatyb2016

	<font size="30"><u><b>Testers</b></u></font>
	airbomberofaqua
	rhyomai
	Wheresthemilkat
	Xenox5815
	
	<font size="30"><u><b>Special Thanks</b></u></font>
	benspector-mls
	carmensalas14
	Gonzalomarcylabschool
	iinar_2004
	Itzyogurldavita
	nightnolly23
	pwacinqz
	]]
end)

--	<u><b>Sound Design</b></u>
--- Music -
--	- Enviornments -
--	- SFX - 

QuitButton.MouseButton1Click:Connect(function()
	game.ReplicatedStorage.KickPlayerEvent:FireServer()
end)



---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------




--PODUI BUTTONS
local ModelButton = PODUI:FindFirstChild("ModelsPart").SurfaceGui.TextButton
local ModButton = PODUI:FindFirstChild("ModsPart").SurfaceGui.TextButton
local GearButton = PODUI:FindFirstChild("GearPart").SurfaceGui.TextButton
local StatsButton = PODUI:FindFirstChild("StatsPart").SurfaceGui.TextButton

--PODUI MENUS
local ModelMenu = PODMENUS:FindFirstChild("ModelsMenu").SurfaceGui
local ModsMenu = PODMENUS:FindFirstChild("ModsMenu").SurfaceGui
local GearMenu = PODMENUS:FindFirstChild("GearMenu").SurfaceGui
local StatsMenu = PODMENUS:FindFirstChild("StatsMenu").SurfaceGui


--PODUI FUNCS
--MODELS
ModelButton.MouseButton1Click:Connect(function()
	ModelButton.Visible = false
	ModButton.Visible = false
	GearButton.Visible = false
	StatsButton.Visible = false

	ModelMenu.Enabled = true
	
	targetPosition = MenuRCam.Position
	originalPosition = MenuRCam.Position
end)

--MODS
ModButton.MouseButton1Click:Connect(function()
	ModelButton.Visible = false
	ModButton.Visible = false
	GearButton.Visible = false
	StatsButton.Visible = false

	ModsMenu.Enabled = true
	
	targetPosition = MenuRCam.Position
	originalPosition = MenuRCam.Position
end)

--GEAR
GearButton.MouseButton1Click:Connect(function()
	ModelButton.Visible = false
	ModButton.Visible = false
	GearButton.Visible = false
	StatsButton.Visible = false

	GearMenu.Enabled = true
	
	targetPosition = MenuLCam.Position
	originalPosition = MenuLCam.Position
end)

--STATS
StatsButton.MouseButton1Click:Connect(function()
	ModelButton.Visible = false
	ModButton.Visible = false
	GearButton.Visible = false
	StatsButton.Visible = false

	StatsMenu.Enabled = true
	
	targetPosition = MenuLCam.Position
	originalPosition = MenuLCam.Position
end)



UIS.InputBegan:Connect(function(input, gameProcessed)
	if input.KeyCode == Enum.KeyCode.Tab then
		if ModelMenu.Enabled then
			ModelMenu.Enabled = false
			
			ModelButton.Visible = true
			ModButton.Visible = true
			GearButton.Visible = true
			StatsButton.Visible = true
			
			targetPosition = PodCam.Position
			originalPosition = PodCam.Position
	elseif ModsMenu.Enabled then
			ModsMenu.Enabled = false

			ModelButton.Visible = true
			ModButton.Visible = true
			GearButton.Visible = true
			StatsButton.Visible = true
			
			targetPosition = PodCam.Position
			originalPosition = PodCam.Position
	elseif GearMenu.Enabled then
		GearMenu.Enabled = false

		ModelButton.Visible = true
		ModButton.Visible = true
		GearButton.Visible = true
		StatsButton.Visible = true
			
			targetPosition = PodCam.Position
			originalPosition = PodCam.Position
	elseif StatsMenu.Enabled then
		StatsMenu.Enabled = false

		ModelButton.Visible = true
		ModButton.Visible = true
		GearButton.Visible = true
		StatsButton.Visible = true
			
			targetPosition = PodCam.Position
			originalPosition = PodCam.Position
		elseif not ModelMenu.Enabled and not ModsMenu.Enabled and not GearMenu.Enabled and not StatsMenu.Enabled then
			PODUIOPEN = false
			updateHumanoidState()
			
			controls.ImageLabel1.Visible = false
			controls.ImageLabel2.Visible = false
			controls.ImageLabel3.Visible = false
			controls.ImageLabel3Updated.Visible = true
			
			controls.Text1.Visible = false
			controls.Text2.Visible = false
			controls.Text3.Visible = false
			controls.Text3Updated.Visible = true
		hrp.CFrame = CFrame.lookAt(hrp.Position, Vector3.new(PodCam.Position.X, hrp.Position.Y, PodCam.Position.Z))
		
			PODUI.ModelsPart.SurfaceGui.Enabled = false
			PODUI.ModsPart.SurfaceGui.Enabled = false
			PODUI.GearPart.SurfaceGui.Enabled = false
			PODUI.StatsPart.SurfaceGui.Enabled = false
			
			Camera.CameraType = Enum.CameraType.Custom
			Camera.CameraSubject = character:WaitForChild("Humanoid")
			CamPart:Destroy()
			
			Players.LocalPlayer.CameraMaxZoomDistance = 9
			Players.LocalPlayer.CameraMinZoomDistance = 3
			
			if cameraConnection then
				cameraConnection:Disconnect()
				cameraConnection = nil
			end
		end
		PODUIOPEN = (ModelMenu.Enabled or ModsMenu.Enabled or GearMenu.Enabled or StatsMenu.Enabled)
	end
end)

UIS.InputEnded:Connect(function(input, gameProcessed)
	if input.KeyCode == Enum.KeyCode.Tab then
		end
end)

--mouse rotate for pod (its active before but until I do a proper gui to cover the movement its gonna have to stay)
local rotateby = math.rad(10)
UIS.InputChanged:Connect(function(input)
	if PODUIOPEN or ModelButton.Visible or ModButton.Visible or GearButton.Visible or StatsButton.Visible then
	if input.UserInputType == Enum.UserInputType.MouseWheel then
		-- 1 right, -1 left (or forwards/back)
		local direction = input.Position.Z > 0 and 1 or -1
		hrp.CFrame = hrp.CFrame * CFrame.Angles(0, rotateby * direction, 0)
		end
		end
end)


---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------



--copypasted from og
--get current player
local allplayers = game:GetService("Players") -- player things
local UIS = game:GetService("UserInputService") --keyboard/mouse inputs
local RunService = game:GetService("RunService") --anim loops

--wait for players av
local lp = allplayers.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()

--acess bod
local hum = char:WaitForChild("Humanoid") --nucelus of movement
local root = char:WaitForChild("HumanoidRootPart") --character center

--anims
local animator = hum:WaitForChild("Animator")
local ForwardsRunAnimation = Instance.new("Animation")
local ForwardsWalkAnimation = Instance.new("Animation")
local BackwardsWalkAnimation = Instance.new("Animation")
local LeftWalkAnimation = Instance.new("Animation")
local LeftRunAnimation = Instance.new("Animation")
local RightRunAnimation = Instance.new("Animation")
local RightWalkAnimation = Instance.new("Animation")
local crouchPoseAnimation = Instance.new("Animation")
local crouchDownAnimation = Instance.new("Animation")
local slidePoseAnimation = Instance.new("Animation")

--assign names to animsids
ForwardsRunAnimation.AnimationId = "rbxassetid://108999179774030"
ForwardsWalkAnimation.AnimationId = "rbxassetid://88782065952494"
BackwardsWalkAnimation.AnimationId = "rbxassetid://90167336530499"
LeftWalkAnimation.AnimationId = "rbxassetid://139349784706953"
LeftRunAnimation.AnimationId = "rbxassetid://98205979853674"
RightRunAnimation.AnimationId = "rbxassetid://106487017963781"
RightWalkAnimation.AnimationId = "rbxassetid://78920439156519"
crouchPoseAnimation.AnimationId = "rbxassetid://111160791127334"
crouchDownAnimation.AnimationId = "rbxassetid://72380389179373"
slidePoseAnimation.AnimationId = "rbxassetid://99512521009826"

--set the tracks
local ForwardsRunTrack = animator:LoadAnimation(ForwardsRunAnimation)
local ForwardsWalkTrack = animator:LoadAnimation(ForwardsWalkAnimation)
local BackwardsWalkTrack = animator:LoadAnimation(BackwardsWalkAnimation)
local LeftWalkTrack = animator:LoadAnimation(LeftWalkAnimation)
local LeftRunTrack = animator:LoadAnimation(LeftRunAnimation)
local RightRunTrack = animator:LoadAnimation(RightRunAnimation)
local RightWalkTrack = animator:LoadAnimation(RightWalkAnimation)
local crouchDownTrack = animator:LoadAnimation(crouchDownAnimation)
local crouchPoseTrack = animator:LoadAnimation(crouchPoseAnimation)
local slidePoseTrack = animator:LoadAnimation(slidePoseAnimation)

--loop or naw
crouchPoseTrack.Looped=true
ForwardsWalkTrack.Looped=true
BackwardsWalkTrack.Looped=true
LeftWalkTrack.Looped=true
LeftRunTrack.Looped=true
RightRunTrack.Looped = true
RightWalkTrack.Looped=true
crouchDownTrack.Looped=false
ForwardsRunTrack.Looped=true
slidePoseTrack.Looped=true


--sprinting
local isShiftHeld = false
local isRunning = false --its not used butttt leave it here just in case


--directionals
local isMovingForwards = false
local isMovingBackwards = false
local isMovingLeft = false
local isMovingRight = false
--crouches
local isLCtrlHeld = false
local isCrouching = false

--sliding
local isSliding = false


-- began
UIS.InputBegan:Connect(function(input, gameProcessed)
	if PODUIOPEN then return end
	if input.KeyCode == Enum.KeyCode.W then
		isMovingForwards = true
		if isCrouching then
			hum.WalkSpeed = 7
		else
			if isShiftHeld then
				hum.WalkSpeed = 35
				ForwardsWalkTrack:Stop()
				ForwardsRunTrack:Play()
			else
				hum.WalkSpeed = 16
				ForwardsRunTrack:Stop()
				ForwardsWalkTrack:Play()
			end
		end
	elseif input.KeyCode == Enum.KeyCode.A then
		isMovingLeft = true
		if isCrouching then
			hum.WalkSpeed = 7
		else
			if isShiftHeld and not isMovingBackwards then
				hum.WalkSpeed = 35
				LeftWalkTrack:Stop()
				LeftRunTrack:Play()
			elseif not isMovingBackwards then
				hum.WalkSpeed = 16
				LeftRunTrack:Stop()
				LeftWalkTrack:Play()
			end
		end
		ForwardsRunTrack:Stop()
		ForwardsWalkTrack:Stop()
		RightWalkTrack:Stop()
		RightRunTrack:Stop()
	elseif input.KeyCode == Enum.KeyCode.S then
		isMovingBackwards = true
		if isCrouching then
			hum.WalkSpeed = 7
		else 
			if isShiftHeld then
				hum.WalkSpeed = 20
			else
				hum.WalkSpeed = 14
			end
			BackwardsWalkTrack:Play()
		end
		ForwardsRunTrack:Stop()
		ForwardsWalkTrack:Stop()
		RightWalkTrack:Stop()
		RightRunTrack:Stop()
		LeftWalkTrack:Stop()
		LeftRunTrack:Stop()

	elseif input.KeyCode == Enum.KeyCode.D then
		isMovingRight = true
		if isCrouching then
			hum.WalkSpeed = 7
		else
			if isShiftHeld and not isMovingBackwards then
				hum.WalkSpeed = 35
				RightWalkTrack:Stop()
				RightRunTrack:Play()
			elseif not isMovingBackwards then
				hum.WalkSpeed = 16
				RightRunTrack:Stop()
				RightWalkTrack:Play()
			end
		end
		ForwardsRunTrack:Stop()
		ForwardsWalkTrack:Stop()
		LeftWalkTrack:Stop()
		LeftRunTrack:Stop()
	elseif input.KeyCode == Enum.KeyCode.LeftShift then
		isShiftHeld = true
		if isCrouching then 
			hum.WalkSpeed = 7
		elseif isMovingBackwards then
			hum.WalkSpeed = 20
			BackwardsWalkTrack:Play()
		elseif isMovingForwards then
			hum.WalkSpeed = 35
			ForwardsWalkTrack:Stop()
			ForwardsRunTrack:Play()
		elseif isMovingLeft then
			hum.WalkSpeed = 35
			LeftWalkTrack:Stop()
			LeftRunTrack:Play()
		elseif isMovingRight then
			hum.WalkSpeed = 35
			RightWalkTrack:Stop()
			RightRunTrack:Play()
		end
	elseif input.KeyCode == Enum.KeyCode.LeftControl then
		if isSliding then
			return
		else
			isLCtrlHeld = true
			isCrouching = true
			hum.HipHeight -= 1
			hum.WalkSpeed = 7
			crouchPoseTrack:Play()
			hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
		end
	elseif input.KeyCode == Enum.KeyCode.X then
		if isCrouching then
			return
		end
		-- if not moving then no slide >:[
		if isSliding == false and (isMovingForwards or isMovingLeft or isMovingRight or isMovingBackwards) then
			isSliding = true

			slidePoseTrack:Play()
			hum.HipHeight -= 1.2
			local velocity = Instance.new("BodyVelocity")
			velocity.MaxForce = Vector3.new(1,0,1) * 7000
			velocity.Velocity = root.CFrame.lookVector * 100
			velocity.Parent = root

			wait(1)
			slidePoseTrack:Stop()
			velocity:Destroy()
			hum.HipHeight += 1.2

			wait(1)
			isSliding = false
		end
	end
end)

--end
UIS.InputEnded:Connect(function(input, gameProcessed)
	if PODUIOPEN then return end
	if input.KeyCode == Enum.KeyCode.W then
		isMovingForwards = false
		ForwardsWalkTrack:Stop()
		ForwardsRunTrack:Stop()
	elseif input.KeyCode == Enum.KeyCode.A then
		isMovingLeft = false
		LeftWalkTrack:Stop()
		LeftRunTrack:Stop()
		if isMovingBackwards then
			if isShiftHeld then
				hum.WalkSpeed = 20
			else
				hum.WalkSpeed = 14
			end
			BackwardsWalkTrack:Play()
		elseif isMovingForwards then
			if isShiftHeld then
				ForwardsRunTrack:Play()
			else
				ForwardsWalkTrack:Play()
			end
		end
	elseif input.KeyCode == Enum.KeyCode.S then
		isMovingBackwards = false
		BackwardsWalkTrack:Stop()
		if isMovingForwards then
			if isShiftHeld then
				ForwardsWalkTrack:Stop()
				ForwardsRunTrack:Play()
				hum.WalkSpeed = 35
			else
				ForwardsWalkTrack:Play()
				hum.WalkSpeed = 16
			end
		elseif isMovingLeft then
			if isShiftHeld then
				hum.WalkSpeed = 35
				LeftRunTrack:Play()
			else
				hum.WalkSpeed = 16
				LeftWalkTrack:Play()
			end
		elseif isMovingRight then
			if isShiftHeld then
				hum.WalkSpeed = 35
				RightRunTrack:Play()
			else
				hum.WalkSpeed = 16
				RightWalkTrack:Play()
			end
		else
			hum.WalkSpeed = 16
		end
	elseif input.KeyCode == Enum.KeyCode.D then
		isMovingRight = false
		RightWalkTrack:Stop()
		RightRunTrack:Stop()
		if isMovingBackwards then
			if isShiftHeld then
				hum.WalkSpeed = 20
			else
				hum.WalkSpeed = 14
			end
			BackwardsWalkTrack:Play()
		elseif isMovingForwards then
			if isShiftHeld then
				ForwardsRunTrack:Play()
			else
				ForwardsWalkTrack:Play()
			end
		end
	elseif input.KeyCode == Enum.KeyCode.LeftShift then
		isShiftHeld = false
		if isCrouching then
			hum.WalkSpeed = 7
		elseif isMovingBackwards then
			hum.WalkSpeed = 14
			BackwardsWalkTrack:Play()
		elseif isMovingForwards then
			ForwardsRunTrack:Stop()
			ForwardsWalkTrack:Play()
			hum.WalkSpeed = 16
		elseif isMovingLeft then
			LeftRunTrack:Stop()
			LeftWalkTrack:Play()
			hum.WalkSpeed = 16
		elseif isMovingRight then
			RightRunTrack:Stop()
			RightWalkTrack:Play()
			hum.WalkSpeed = 16
		else
			hum.WalkSpeed = 16
		end
	elseif input.KeyCode == Enum.KeyCode.LeftControl then
		if isSliding then
			return
		elseif isCrouching == true then
			isLCtrlHeld = false
			isCrouching = false
			crouchPoseTrack:Stop()
			hum.HipHeight += 1
			hum.WalkSpeed = 16
			hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
		end
		if isShiftHeld then
			hum.WalkSpeed = 35
			ForwardsRunTrack:Play()
		end
	end
end)



--POD RE-ENTRY

local poddy = workspace.poddy
local prompt = poddy and poddy:FindFirstChild("ProximityPrompt")

if prompt then
	prompt.Triggered:Connect(function()
		if not cameraConnection then 
			poddycam = ReplicatedStorage.podCam:Clone()
			poddycam.Parent = workspace
			poddycam.Position = poddycam.Position
			originalPosition = poddycam.Position
			targetPosition = poddycam.Position
			
			Camera.CameraSubject = poddy
			Camera.CameraType = Enum.CameraType.Scriptable
			
			cameraConnection = RunService.RenderStepped:Connect(function()
				local mouse = player:GetMouse()

				local screenX = Camera.ViewportSize.X
				local screenY = Camera.ViewportSize.Y

				local leftoverScreenX = screenX - mouse.X
				local leftoverScreenY = screenY - mouse.Y

				local DistanceFromOriginX = (screenX/2) - leftoverScreenX
				local DistanceFromOriginY = leftoverScreenY - (screenY/2)

				local clampedX = math.clamp(DistanceFromOriginX * moveFactor, -MAX_POSITION, MAX_POSITION)
				local clampedY = math.clamp(DistanceFromOriginY * moveFactor, -MAX_POSITION, MAX_POSITION)

				if previousMouseX and previousMouseY then
					local mouseMoved = (DistanceFromOriginX ~= previousMouseX) or (DistanceFromOriginY ~= previousMouseY)
					if mouseMoved then
						moving = true
						targetPosition = originalPosition + Vector3.new(clampedX,clampedY,0)
					else
						moving = false
					end
				end
				if moving then
					PodCam.CFrame = PodCam.CFrame:Lerp(CFrame.new(targetPosition), .1)
				else
					PodCam.CFrame = PodCam.CFrame:Lerp(CFrame.new(targetPosition), .2)
				end

				local offsetUIX = (screenX/4) * 0.009
				local offsetUIY = (screenY/5) * 0.009

				Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(PodCam.Position), .2)
				local finalTargetPosition = PodCam.Position + Vector3.new(-offsetUIX, -offsetUIY+1, -10)
				if UI.PrimaryPart then
					UI:SetPrimaryPartCFrame(UI.PrimaryPart.CFrame:Lerp(CFrame.new(finalTargetPosition) * CFrame.Angles(0, math.rad(23), 0), .1))
				end

				previousMouseX = DistanceFromOriginX
				previousMouseY = DistanceFromOriginY
			end)
			
			PODUI.ModelsPart.SurfaceGui.Enabled = true
			PODUI.ModsPart.SurfaceGui.Enabled = true
			PODUI.GearPart.SurfaceGui.Enabled = true
			PODUI.StatsPart.SurfaceGui.Enabled = true

			ModelButton.Visible = true
			ModButton.Visible = true
			GearButton.Visible = true
			StatsButton.Visible = true
			game.Players.LocalPlayer.Character:MoveTo(workspace.SpawnLocation.Position)
			PODUIOPEN = true
			updateHumanoidState()
			hrp.CFrame = CFrame.lookAt(hrp.Position, Vector3.new(PodCam.Position.X, hrp.Position.Y, PodCam.Position.Z))
		end
	end)
end
